user  nginx;
worker_processes  auto;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Redirect HTTP to HTTPS
    server {
        listen 80;
        server_name graphx.cba.am www.graphx.cba.am;
        
        return 301 https://$host$request_uri;
    }

    # HTTPS server for graphx.am
    server {
        listen 443 ssl;
        server_name graphx.cba.am www.graphx.cba.am;

        # SSL certificates
        ssl_certificate /etc/nginx/ssl/graphx.cba.am.crt;
        ssl_certificate_key /etc/nginx/ssl/graphx.cba.am.key;
        
        # SSL configurations
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        ssl_session_cache shared:SSL:10m;
        ssl_session_tickets off;

        # Restrict access to only the allowed domain
        #if ($host != "graphx.cba.am") {
        #    return 403;
        #}

        # Serve frontend files
        location / {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /index.html;
        }

        # Proxy API requests to the backend service
        location /api/ {
            proxy_pass http://backend:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Deny all other domain requests
    server {
        listen 80 default_server;
        listen 443 ssl default_server;

        # Self-signed certificate for blocking unknown requests
        ssl_certificate /etc/nginx/ssl/graphx.cba.am.crt;
        ssl_certificate_key /etc/nginx/ssl/graphx.cba.am.key;

        return 444;  # Close connection without response
    }
}
